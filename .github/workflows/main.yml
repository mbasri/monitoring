name: 'Build, Scan, Publish & Sign Docker image'

on:
  push:
    branches: [ main, dev ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  REGISTRY: 'ghcr.io'

  PROMETHEUS_DIRECTORY: 'docker/prometheus' 
  PROMETHEUS_IMAGE_NAME: 'mbasri/prometheus'

  NODE_EXPORTER_DIRECTORY: 'docker/node-exporter'
  NODE_EXPORTER_IMAGE_NAME: 'mbasri/node-exporter'
  
jobs:
  generate-version:
    runs-on: ubuntu-latest
    name: Generate version
    outputs:
      version: ${{ steps.version.outputs.version }}
    steps:
    - name: Generate date version
      id: version
      run: echo "version=$(date +'%Y%m%d%H%M%S')" >> "$GITHUB_OUTPUT"

  build-prometheus:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write
      id-token: write

    needs: [ generate-version ]
    name: Build Prometheus image
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    
    - name: Build, Push and Sign Docker Image
      uses: mbasri-actions/dockerize@dev
      with:
        registry: ${{ env.REGISTRY }}
        github-token: ${{ secrets.GITHUB_TOKEN }}
        docker-directory: ${{ env.PROMETHEUS_DIRECTORY }}
        image-name: ${{ env.PROMETHEUS_IMAGE_NAME }}
        tags: |
          ${{ env.REGISTRY }}/${{ env.PROMETHEUS_IMAGE_NAME }}:${{ needs.generate-version.outputs.version }}
          ${{ env.REGISTRY }}/${{ env.PROMETHEUS_IMAGE_NAME }}:test1
          ${{ env.REGISTRY }}/${{ env.PROMETHEUS_IMAGE_NAME }}:test2

  scan-prometheus:
    runs-on: ubuntu-latest
    needs: [ generate-version, build-prometheus ]
    name: Scan Prometheus image
    steps:
    - uses: mbasri-actions/docker-scan@dev
      with:
        image-ref: ${{ env.REGISTRY }}/${{ env.PROMETHEUS_IMAGE_NAME }}:${{ needs.generate-version.outputs.version }}
