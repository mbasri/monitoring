name: 'Build, Scan & Publish Docker image'

on:
  push:
    branches: [ main, dev ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    branches: [ main, dev ]
    # inputs:
    #   description:
    #     description: 'Description of the build'
    #     required: true
    #     default: ''
    # ${{ github.event.inputs.description }}
env:
  CONTAINERs_REGISTRY: 'ghcr.io'
  
  LATEST_TAG: 'latest'
  
  PROMETHEUS_DIRECTORY: 'docker/prometheus'
  PROMETHEUS_IMAGE_NAME: 'mbasri/prometheus'

  NODE_EXPORTER_DIRECTORY: 'docker/node-exporter'
  NODE_EXPORTER_IMAGE_NAME: 'mbasri/node-exporter'

  COMMIT_SHA: ${{ github.sha }}
  
jobs:
  # Job to generate a version based on the current date and time
  generate-version:
    runs-on: ubuntu-latest
    name: Generate version
    outputs:
      version: ${{ steps.version.outputs.version }}
    steps:
    - name: Generate date version
      id: version
      run: echo "version=$(date +'%Y%m%d%H%M%S')" >> "$GITHUB_OUTPUT"

  # Job to build the Prometheus Docker image
  build-prometheus:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write
      id-token: write # needed for signing the images with GitHub OIDC Token

    needs: [ generate-version]
    name: Build Prometheus Docker image
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    
    - name: Install Cosign
      uses: sigstore/cosign-installer@v3.7.0

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3.3.0

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3.8.0
    
    - name: Build Prometheus Docker image
      run: |
        docker build \
          -t ${{ env.PROMETHEUS_IMAGE_NAME }}:${{ needs.generate-version.outputs.version }} \
          -t ${{ env.PROMETHEUS_IMAGE_NAME }}:${{ env.COMMIT_SHA }}\
          ${{ env.PROMETHEUS_DIRECTORY }}

  # Job to scan the Prometheus Docker image
  scan-prometheus:
    runs-on: ubuntu-latest
    needs: [build-prometheus]
    name: Scan Prometheus Docker image
    steps:
    - name: Scan Prometheus Docker image
      run: echo "scan-prometheus"

  # Job to publish the Prometheus Docker image
  publish-prometheus:
    runs-on: ubuntu-latest
    needs: [scan-prometheus]
    name: Publish Prometheus Docker image
    steps:
    - name: Publish Prometheus Docker image
      run: echo "publish-prometheus"

  # Job to build the Node Exporter Docker image
  build-node-exporter:
    runs-on: ubuntu-latest
    needs: [ generate-version]
    name: Build Node Exporter Docker image
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    
    - name: Build Node Exporter Docker image
      run: |
          docker build \
            -t ${{ env.NODE_EXPORTER_IMAGE_NAME }}:${{ needs.generate-version.outputs.version }} \
            -t ${{ env.NODE_EXPORTER_IMAGE_NAME }}:${{ env.COMMIT_SHA }} \
            ${{ env.NODE_EXPORTER_DIRECTORY }}

  # Job to scan the Node Exporter Docker image
  scan-node-exporter:
    runs-on: ubuntu-latest
    needs: [build-node-exporter]
    name: Scan Node Exporter Docker image
    steps:
    - name: Scan Node Exporter Docker image
      run: echo "scan-node-exporter"

  # Job to publish the Node Exporter Docker image
  publish-node-exporter:
    runs-on: ubuntu-latest
    needs: [scan-node-exporter]
    name: Publish Node Exporter Docker image
    steps:
    - name: Publish Node Exporter Docker image
      run: echo "publish-node-exporter"
